import 'react-i18next';
import { resources } from '../i18n';

declare module 'react-i18next' {
  type DefaultResources = typeof resources['fr'];
  interface Resources extends DefaultResources {}
}

// Types pour les cl√©s de traduction
export interface TranslationKeys {
  common: {
    welcome: string;
    login: string;
    register: string;
    logout: string;
    profile: string;
    dashboard: string;
    home: string;
    about: string;
    contact: string;
    search: string;
    filter: string;
    sort: string;
    save: string;
    cancel: string;
    delete: string;
    edit: string;
    add: string;
    view: string;
    back: string;
    next: string;
    previous: string;
    submit: string;
    loading: string;
    error: string;
    success: string;
    warning: string;
    info: string;
    yes: string;
    no: string;
    close: string;
    open: string;
    language: string;
    theme: string;
    dark: string;
    light: string;
    notifications: string;
    settings: string;
    help: string;
    support: string;
  };
  auth: {
    loginTitle: string;
    registerTitle: string;
    email: string;
    password: string;
    confirmPassword: string;
    firstName: string;
    lastName: string;
    phone: string;
    forgotPassword: string;
    rememberMe: string;
    loginButton: string;
    registerButton: string;
    alreadyHaveAccount: string;
    dontHaveAccount: string;
    loginSuccess: string;
    registerSuccess: string;
    loginError: string;
    registerError: string;
    invalidCredentials: string;
    passwordMismatch: string;
    emailRequired: string;
    passwordRequired: string;
    invalidEmail: string;
  };
  restaurant: {
    restaurants: string;
    restaurant: string;
    menu: string;
    dishes: string;
    dish: string;
    price: string;
    description: string;
    ingredients: string;
    category: string;
    cuisine: string;
    rating: string;
    reviews: string;
    address: string;
    phone: string;
    hours: string;
    deliveryTime: string;
    deliveryFee: string;
    minimumOrder: string;
    open: string;
    closed: string;
    orderNow: string;
    viewMenu: string;
    addToCart: string;
    removeFromCart: string;
    favorite: string;
    unfavorite: string;
    noRestaurants: string;
    searchRestaurants: string;
    filterByCuisine: string;
    sortByRating: string;
    sortByDistance: string;
    sortByDeliveryTime: string;
  };
  cart: {
    cart: string;
    cartEmpty: string;
    items: string;
    item: string;
    subtotal: string;
    deliveryFee: string;
    tax: string;
    total: string;
    checkout: string;
    clearCart: string;
    updateQuantity: string;
    removeItem: string;
    quantity: string;
    addToCart: string;
    removeFromCart: string;
    cartUpdated: string;
    itemAdded: string;
    itemRemoved: string;
  };
  order: {
    order: string;
    orders: string;
    orderHistory: string;
    orderTracking: string;
    orderStatus: string;
    orderNumber: string;
    orderDate: string;
    orderTime: string;
    estimatedDelivery: string;
    deliveryAddress: string;
    paymentMethod: string;
    orderSummary: string;
    orderDetails: string;
    orderConfirmation: string;
    orderPlaced: string;
    orderConfirmed: string;
    orderPreparing: string;
    orderReady: string;
    orderDelivering: string;
    orderDelivered: string;
    orderCancelled: string;
    trackOrder: string;
    reorder: string;
    cancelOrder: string;
    rateOrder: string;
    noOrders: string;
  };
  user: {
    profile: string;
    account: string;
    personalInfo: string;
    addresses: string;
    favorites: string;
    preferences: string;
    notifications: string;
    security: string;
    changePassword: string;
    updateProfile: string;
    deleteAccount: string;
    accountSettings: string;
    deliveryAddresses: string;
    addAddress: string;
    editAddress: string;
    deleteAddress: string;
    defaultAddress: string;
    noFavorites: string;
    noAddresses: string;
  };
  restaurantOwner: {
    dashboard: string;
    orders: string;
    dishes: string;
    menu: string;
    analytics: string;
    earnings: string;
    customers: string;
    reviews: string;
    settings: string;
    addDish: string;
    editDish: string;
    deleteDish: string;
    dishName: string;
    dishPrice: string;
    dishDescription: string;
    dishCategory: string;
    dishImage: string;
    dishAvailable: string;
    dishUnavailable: string;
    orderManagement: string;
    acceptOrder: string;
    rejectOrder: string;
    markAsReady: string;
    markAsDelivered: string;
    restaurantInfo: string;
    restaurantName: string;
    restaurantAddress: string;
    restaurantPhone: string;
    restaurantHours: string;
    restaurantCuisine: string;
    restaurantDescription: string;
  };
  navigation: {
    home: string;
    restaurants: string;
    cart: string;
    orders: string;
    profile: string;
    dashboard: string;
    favorites: string;
    about: string;
    contact: string;
    help: string;
    settings: string;
    logout: string;
  };
  landing: {
    heroTitle: string;
    heroSubtitle: string;
    getStarted: string;
    learnMore: string;
    features: string;
    fastDelivery: string;
    wideSelection: string;
    securePayment: string;
    customerSupport: string;
    howItWorks: string;
    step1: string;
    step2: string;
    step3: string;
    step4: string;
    testimonials: string;
    downloadApp: string;
  };
  errors: {
    general: string;
    network: string;
    server: string;
    notFound: string;
    unauthorized: string;
    forbidden: string;
    validation: string;
    required: string;
    invalidFormat: string;
    minLength: string;
    maxLength: string;
    emailInvalid: string;
    passwordWeak: string;
    passwordMismatch: string;
  };
  success: {
    profileUpdated: string;
    passwordChanged: string;
    orderPlaced: string;
    itemAdded: string;
    itemRemoved: string;
    cartUpdated: string;
    favoriteAdded: string;
    favoriteRemoved: string;
    addressAdded: string;
    addressUpdated: string;
    addressDeleted: string;
  };
} 